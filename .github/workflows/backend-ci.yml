name: Backend CI
on:
  push:
    branches: [main]
    paths:
      - "Backend/**"
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Backend
    strategy:
      matrix:
        python-version: [3.10]
    steps:
      - name: Install dependencies and lint
        uses: actions/checkout@v4
      - run: pip install -r requirements.txt
      - run: pycodestyle .
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            Backend/release.zip
            Backend/!venv/
  test:
    runs-on: ubuntu-latest
    needs: build
    env: MONGO_URI = ${{ secrets.MONGO_URI }}
    defaults:
      run:
        working-directory: Backend
    strategy:
      matrix:
        python-version: [3.10]
    steps:
      - name: Install dependencies
        uses: actions/checkout@v4
      - run: pip install -r requirements.txt
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"

      - name: Create and start virtual environment
        run: |
          coverage run test_db_access.py
          coverage report -m

  deploy:
    runs-on: ubuntu-latest
    # Set the working directory for all steps in this job
    needs: test
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: test
        run: |
          pwd
          ls -la

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "picture-perfect"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AE9068FBDCAE45A29EB6212CEEEE72F8 }}
